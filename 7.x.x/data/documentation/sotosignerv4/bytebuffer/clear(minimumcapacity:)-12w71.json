{"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer"]]},"metadata":{"roleHeading":"Instance Method","externalID":"s:7NIOCore10ByteBufferV5clear15minimumCapacityySi_tF","title":"clear(minimumCapacity:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"clear","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minimumCapacity","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"modules":[{"name":"SotoSignerV4"}],"symbolKind":"method"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-12w71"},"abstract":[{"text":"Set both reader index and writer index to ","type":"text"},{"code":"0","type":"codeVoice"},{"text":". This will reset the state of this ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" to the state","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a "},{"type":"codeVoice","code":"ByteBuffer"},{"text":" ","type":"text"},{"text":"for a new use-case.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"clear","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minimumCapacity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The minimum capacity that will be (re)allocated for this buffer"}]}],"name":"minimumCapacity"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This method will allocate if the underlying storage is referenced by another "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":". Even if an"},{"type":"text","text":" "},{"type":"text","text":"allocation is necessary this will be cheaper as the copy of the storage is elided."}]}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-12w71"]}],"kind":"symbol","references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/clear(minimumCapacity:)-12w71":{"title":"clear(minimumCapacity:)","kind":"symbol","url":"\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-12w71","abstract":[{"text":"Set both reader index and writer index to ","type":"text"},{"type":"codeVoice","code":"0"},{"text":". This will reset the state of this ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" to the state"},{"type":"text","text":" "},{"text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" ","type":"text"},{"type":"text","text":"for a new use-case."}],"type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-12w71","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"clear","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"minimumCapacity"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer":{"kind":"symbol","title":"ByteBuffer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ByteBuffer"}],"abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"text":"more bytes (octets).","type":"text"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer","type":"topic","url":"\/documentation\/sotosignerv4\/bytebuffer","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"role":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"title":"SotoSignerV4","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","kind":"symbol","role":"collection","url":"\/documentation\/sotosignerv4","abstract":[{"text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers.","type":"text"}],"type":"topic"}}}