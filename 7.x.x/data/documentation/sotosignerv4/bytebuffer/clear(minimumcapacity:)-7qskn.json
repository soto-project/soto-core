{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-7qskn"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use an `Int` as the argument"}]}],"abstract":[{"type":"text","text":"Set both reader index and writer index to "},{"type":"codeVoice","code":"0"},{"type":"text","text":". This will reset the state of this "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" to the state"},{"type":"text","text":" "},{"type":"text","text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" "},{"type":"text","text":"for a new use-case."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-7qskn","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clear"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minimumCapacity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier","text":"UInt32"},{"kind":"text","text":")"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"minimumCapacity","content":[{"inlineContent":[{"type":"text","text":"The minimum capacity that will be (re)allocated for this buffer"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"style":"note","content":[{"inlineContent":[{"text":"This method will allocate if the underlying storage is referenced by another ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":". Even if an","type":"text"},{"text":" ","type":"text"},{"text":"allocation is necessary this will be cheaper as the copy of the storage is elided.","type":"text"}],"type":"paragraph"}],"name":"Note","type":"aside"}]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"clear","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minimumCapacity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":")","kind":"text"}],"modules":[{"name":"SotoSignerV4"}],"roleHeading":"Instance Method","platforms":[{"message":"Use an `Int` as the argument","unavailable":false,"deprecated":true,"beta":false}],"title":"clear(minimumCapacity:)","externalID":"s:7NIOCore10ByteBufferV5clear15minimumCapacityys6UInt32V_tF","role":"symbol","symbolKind":"method"},"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/clear(minimumCapacity:)-7qskn":{"type":"topic","abstract":[{"type":"text","text":"Set both reader index and writer index to "},{"type":"codeVoice","code":"0"},{"type":"text","text":". This will reset the state of this "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" to the state"},{"type":"text","text":" "},{"type":"text","text":"of a freshly allocated one, if possible without allocations. This is the cheapest way to recycle a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" "},{"type":"text","text":"for a new use-case."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clear"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minimumCapacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"},{"kind":"text","text":")"}],"deprecated":true,"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/clear(minimumCapacity:)-7qskn","url":"\/documentation\/sotosignerv4\/bytebuffer\/clear(minimumcapacity:)-7qskn","kind":"symbol","role":"symbol","title":"clear(minimumCapacity:)"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"type":"topic","url":"\/documentation\/sotosignerv4\/bytebuffer","role":"symbol","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer","title":"ByteBuffer","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}]},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","abstract":[{"type":"text","text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers."}],"title":"SotoSignerV4","type":"topic","role":"collection","url":"\/documentation\/sotosignerv4"}}}