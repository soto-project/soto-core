{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Yields the bytes currently writable (","type":"text"},{"code":"bytesWritable","type":"codeVoice"},{"text":" = ","type":"text"},{"code":"capacity","type":"codeVoice"},{"text":" - ","type":"text"},{"code":"writerIndex","type":"codeVoice"},{"text":"). Before reading those bytes you must first","type":"text"},{"text":" ","type":"text"},{"text":"write to them otherwise you will trigger undefined behaviour. The writer index will remain unchanged.","type":"text"}],"metadata":{"modules":[{"name":"SotoSignerV4"}],"role":"symbol","symbolKind":"method","title":"withUnsafeMutableWritableBytes(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUnsafeMutableWritableBytes"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","text":"UnsafeMutableRawBufferPointer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"externalID":"s:7NIOCore10ByteBufferV30withUnsafeMutableWritableBytesyxxSwKXEKlF"},"identifier":{"url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withUnsafeMutableWritableBytes(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withUnsafeMutableWritableBytes","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"UnsafeMutableRawBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sw"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The closure that will accept the yielded bytes and return the number of bytes written."}],"type":"paragraph"}],"name":"body"}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"The number of bytes written."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"In almost all cases you should use "},{"code":"writeWithUnsafeMutableBytes","type":"codeVoice"},{"type":"text","text":" which will move the write pointer instead of this method"}],"type":"paragraph"}],"style":"note"},{"type":"aside","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not escape the pointer from the closure for later use."}]}],"style":"warning"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sotosignerv4\/bytebuffer\/withunsafemutablewritablebytes(_:)"]}],"sections":[],"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer/withUnsafeMutableWritableBytes(_:)":{"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer\/withUnsafeMutableWritableBytes(_:)","title":"withUnsafeMutableWritableBytes(_:)","url":"\/documentation\/sotosignerv4\/bytebuffer\/withunsafemutablewritablebytes(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withUnsafeMutableWritableBytes","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"preciseIdentifier":"s:Sw","text":"UnsafeMutableRawBufferPointer","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Yields the bytes currently writable ("},{"type":"codeVoice","code":"bytesWritable"},{"type":"text","text":" = "},{"type":"codeVoice","code":"capacity"},{"type":"text","text":" - "},{"type":"codeVoice","code":"writerIndex"},{"type":"text","text":"). Before reading those bytes you must first"},{"type":"text","text":" "},{"type":"text","text":"write to them otherwise you will trigger undefined behaviour. The writer index will remain unchanged."}],"kind":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"role":"collection","url":"\/documentation\/sotosignerv4","kind":"symbol","title":"SotoSignerV4","abstract":[{"text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers.","type":"text"}],"type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBuffer":{"type":"topic","url":"\/documentation\/sotosignerv4\/bytebuffer","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBuffer","title":"ByteBuffer","abstract":[{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}]}}}