{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"name":"Note","style":"note","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"ByteBufferAllocator","type":"codeVoice"},{"text":" is thread-safe.","type":"text"}],"type":"paragraph"}]}]}],"sections":[],"abstract":[{"text":"The preferred allocator for ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"text":" ","type":"text"},{"type":"codeVoice","code":"malloc"},{"type":"text","text":", "},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"modules":[{"name":"SotoSignerV4"}],"symbolKind":"struct","title":"ByteBufferAllocator","externalID":"s:7NIOCore19ByteBufferAllocatorV","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator"},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/codes.soto.soto-core\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/sotosignerv4\/bytebufferallocator"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4"]]},"topicSections":[{"anchor":"Initializers","title":"Initializers","generated":true,"identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()"]},{"identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/buffer(capacity:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"references":{"doc://codes.soto.soto-core/s8SendableP":{"identifier":"doc:\/\/codes.soto.soto-core\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"title":"SotoSignerV4","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","kind":"symbol","role":"collection","url":"\/documentation\/sotosignerv4","abstract":[{"text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers.","type":"text"}],"type":"topic"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/buffer(capacity:)":{"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/buffer(capacity:)","title":"buffer(capacity:)","abstract":[{"text":"Request a freshly allocated ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" of size "},{"type":"codeVoice","code":"capacity"},{"type":"text","text":" or larger."}],"kind":"symbol","type":"topic","url":"\/documentation\/sotosignerv4\/bytebufferallocator\/buffer(capacity:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"buffer","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"capacity"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"}],"role":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/init()":{"type":"topic","role":"symbol","abstract":[{"text":"Create a fresh ","type":"text"},{"code":"ByteBufferAllocator","type":"codeVoice"},{"type":"text","text":". In the future the allocator might use for example allocation pools and"},{"type":"text","text":" "},{"text":"therefore it’s recommended to reuse ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocators"},{"type":"text","text":" where possible instead of creating fresh ones in"},{"type":"text","text":" "},{"text":"many places.","type":"text"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","url":"\/documentation\/sotosignerv4\/bytebufferallocator\/init()","kind":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator":{"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ByteBufferAllocator"}],"title":"ByteBufferAllocator","role":"symbol","type":"topic","navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"realloc"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/sotosignerv4\/bytebufferallocator"}}}