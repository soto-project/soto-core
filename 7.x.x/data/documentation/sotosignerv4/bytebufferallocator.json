{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"ByteBufferAllocator","roleHeading":"Structure","modules":[{"name":"SotoSignerV4"}],"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"role":"symbol","externalID":"s:7NIOCore19ByteBufferAllocatorV","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()"],"generated":true,"anchor":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/buffer(capacity:)"],"generated":true,"anchor":"Instance-Methods"}],"abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libc’s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/codes.soto.soto-core\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":" is thread-safe.","type":"text"}]}],"type":"aside","style":"note"}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/sotosignerv4\/bytebufferallocator"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/init()":{"title":"init()","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()","role":"symbol","abstract":[{"type":"text","text":"Create a fresh "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":". In the future the allocator might use for example allocation pools and"},{"type":"text","text":" "},{"type":"text","text":"therefore it’s recommended to reuse "},{"type":"codeVoice","code":"ByteBufferAllocators"},{"type":"text","text":" where possible instead of creating fresh ones in"},{"type":"text","text":" "},{"type":"text","text":"many places."}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","url":"\/documentation\/sotosignerv4\/bytebufferallocator\/init()"},"doc://codes.soto.soto-core/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/codes.soto.soto-core\/s8SendableP"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/buffer(capacity:)":{"kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/buffer(capacity:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buffer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"capacity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"title":"buffer(capacity:)","type":"topic","role":"symbol","abstract":[{"text":"Request a freshly allocated ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" of size ","type":"text"},{"type":"codeVoice","code":"capacity"},{"text":" or larger.","type":"text"}],"url":"\/documentation\/sotosignerv4\/bytebufferallocator\/buffer(capacity:)"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator":{"navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/sotosignerv4\/bytebufferallocator","title":"ByteBufferAllocator","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"malloc"},{"type":"text","text":", "},{"type":"codeVoice","code":"realloc"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"type":"text","text":"."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator"},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"url":"\/documentation\/sotosignerv4","type":"topic","kind":"symbol","title":"SotoSignerV4","role":"collection","abstract":[{"type":"text","text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers."}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4"}}}