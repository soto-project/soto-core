{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()"],"generated":true,"anchor":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/buffer(capacity:)"],"generated":true,"anchor":"Instance-Methods"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/codes.soto.soto-core\/s8SendableP"],"kind":"relationships","type":"conformsTo"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"malloc"},{"type":"text","text":", "},{"type":"codeVoice","code":"realloc"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"type":"text","text":"."}],"metadata":{"title":"ByteBufferAllocator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"role":"symbol","externalID":"s:7NIOCore19ByteBufferAllocatorV","modules":[{"name":"SotoSignerV4"}],"roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sotosignerv4\/bytebufferallocator"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}]}]},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":" is thread-safe."}]}],"type":"aside","style":"note"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4"]]},"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/init()":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()","type":"topic","url":"\/documentation\/sotosignerv4\/bytebufferallocator\/init()","abstract":[{"type":"text","text":"Create a fresh "},{"code":"ByteBufferAllocator","type":"codeVoice"},{"type":"text","text":". In the future the allocator might use for example allocation pools and"},{"type":"text","text":" "},{"type":"text","text":"therefore it’s recommended to reuse "},{"code":"ByteBufferAllocators","type":"codeVoice"},{"text":" where possible instead of creating fresh ones in","type":"text"},{"text":" ","type":"text"},{"text":"many places.","type":"text"}],"kind":"symbol","title":"init()"},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"role":"collection","url":"\/documentation\/sotosignerv4","kind":"symbol","title":"SotoSignerV4","abstract":[{"text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers.","type":"text"}],"type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/buffer(capacity:)":{"url":"\/documentation\/sotosignerv4\/bytebufferallocator\/buffer(capacity:)","kind":"symbol","title":"buffer(capacity:)","role":"symbol","abstract":[{"text":"Request a freshly allocated ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" of size ","type":"text"},{"code":"capacity","type":"codeVoice"},{"text":" or larger.","type":"text"}],"identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/buffer(capacity:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"capacity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"}]},"doc://codes.soto.soto-core/s8SendableP":{"identifier":"doc:\/\/codes.soto.soto-core\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"url":"\/documentation\/sotosignerv4\/bytebufferallocator","kind":"symbol","title":"ByteBufferAllocator","navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libc’s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"code":"free","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator"}}}