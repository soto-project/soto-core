{"kind":"symbol","variants":[{"paths":["\/documentation\/sotosignerv4\/bytebufferallocator\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}]}],"sections":[],"abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":". In the future the allocator might use for example allocation pools and","type":"text"},{"text":" ","type":"text"},{"text":"therefore it’s recommended to reuse ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocators"},{"text":" where possible instead of creating fresh ones in","type":"text"},{"text":" ","type":"text"},{"text":"many places.","type":"text"}],"metadata":{"externalID":"s:7NIOCore19ByteBufferAllocatorVACycfc","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"modules":[{"name":"SotoSignerV4"}],"roleHeading":"Initializer","symbolKind":"init","role":"symbol","title":"init()"},"hierarchy":{"paths":[["doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator"]]},"references":{"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator":{"type":"topic","url":"\/documentation\/sotosignerv4\/bytebufferallocator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"title":"ByteBufferAllocator","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator","kind":"symbol","abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"malloc"},{"type":"text","text":", "},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"role":"symbol"},"doc://codes.soto.soto-core/documentation/SotoSignerV4":{"type":"topic","kind":"symbol","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4","abstract":[{"type":"text","text":"Sign HTTP requests before sending them to AWS either by generating a signed URL or a set of signed headers."}],"url":"\/documentation\/sotosignerv4","role":"collection","title":"SotoSignerV4"},"doc://codes.soto.soto-core/documentation/SotoSignerV4/ByteBufferAllocator/init()":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","type":"topic","identifier":"doc:\/\/codes.soto.soto-core\/documentation\/SotoSignerV4\/ByteBufferAllocator\/init()","url":"\/documentation\/sotosignerv4\/bytebufferallocator\/init()","kind":"symbol","abstract":[{"type":"text","text":"Create a fresh "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":". In the future the allocator might use for example allocation pools and"},{"type":"text","text":" "},{"type":"text","text":"therefore it’s recommended to reuse "},{"type":"codeVoice","code":"ByteBufferAllocators"},{"type":"text","text":" where possible instead of creating fresh ones in"},{"type":"text","text":" "},{"type":"text","text":"many places."}]}}}